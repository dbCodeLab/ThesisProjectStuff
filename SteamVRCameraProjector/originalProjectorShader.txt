// Upgrade NOTE: replaced '_Projector' with 'unity_Projector'
// Upgrade NOTE: replaced '_ProjectorClip' with 'unity_ProjectorClip'

Shader "Projector/Multiply" {
	Properties {
		_MainTex ("Base", 2D) = "gray" {}
		//_FalloffTex ("FallOff", 2D) = "white" {}
	}
	Subshader {
		Tags {"Queue"="Transparent"}
		Pass {
			ZWrite Off
			ColorMask RGB
			Blend DstColor Zero
			Offset -1, -1

			CGPROGRAM
			#pragma vertex vert
			#pragma fragment frag
			#pragma multi_compile_fog
			#include "UnityCG.cginc"
			
			struct v2f {
				float4 uvShadow : TEXCOORD0;
				//float2 uvShadow : TEXCOORD0;
				float4 uvFalloff : TEXCOORD1;
				UNITY_FOG_COORDS(2)
				float4 pos : SV_POSITION;
			};
			
			sampler2D _MainTex;

			float4 _MainTex_ST;
			//sampler2D _MainTex;
			float4x4 unity_Projector;
			float4x4 unity_ProjectorClip;
			
			v2f vert (float4 vertex : POSITION)
			{
				v2f o;
				o.pos = mul (UNITY_MATRIX_MVP, vertex);
				// o.uvShadow = TRANSFORM_TEX(UNITY_PROJ_COORD(mul(unity_Projector, vertex)), _MainTex);
				o.uvShadow = mul(unity_Projector, vertex);
				
				//o.uvShadow *= float4(_MainTex_ST.xy,1,1);
				//o.uvShadow += float4(_MainTex_ST.zw,0,0);

				//o.uvFalloff = mul (unity_ProjectorClip, vertex);
				//UNITY_TRANSFER_FOG(o,o.pos);
				return o;
			}
			
			
			//sampler2D _FalloffTex;
			
			
			fixed4 frag (v2f i) : SV_Target
			{
				float4 texS;

				float2 texCoord = (i.uvShadow.xy / i.uvShadow.w);
				texCoord.y = 1.0f - texCoord.y;
				
				if (texCoord.x < 1 && texCoord.y < 1 && texCoord.x > 0 && texCoord.y > 0) //if(i.uvShadow.x < 1 && i.uvShadow.y < 1 && i.uvShadow.x > 0 && i.uvShadow.y > 0)
                  {
					texCoord = texCoord * _MainTex_ST.xy + _MainTex_ST.zw;
					texS = tex2D(_MainTex, texCoord); //tex2D(_MainTex, UNITY_PROJ_COORD(i.uvShadow));
					//texS = tex2D(_MainTex, i.uvShadow);
                  }else
                  {
                  	texS = float4(0,1,0,1);
                  }
				 //float4 upc = UNITY_PROJ_COORD(i.uvShadow);

				  //texS = float4(upc.x, upc.y+1, 0, 1);

				  
				  //texS = tex2D(_MainTex, texCoord); // UNITY_PROJ_COORD(i.uvShadow));
				  
				  //texS = tex2D(_MainTex, i.uvShadow);

//				texS.a = 1.0-texS.a;

//				fixed4 texF = tex2Dproj (_FalloffTex, UNITY_PROJ_COORD(i.uvFalloff));
//				fixed4 res = lerp(fixed4(1,1,1,0), texS, texF.a);

//				UNITY_APPLY_FOG_COLOR(i.fogCoord, res, fixed4(1,1,1,1));
//				return res;
				return texS;
			
			}
			ENDCG
		}
	}
}
